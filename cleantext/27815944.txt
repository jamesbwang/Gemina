  We study how the arboreal turtle ant ( Cephalotes goniodontus) solves a fundamental computing problem: maintaining a trail network and finding alternative paths to route around broken links in the network. Turtle ants form a routing backbone of foraging trails linking several nests and temporary food sources. This species travels only in the trees , so their foraging trails are constrained to lie on a natural graph formed by overlapping branches and vines in the tangled canopy. Links between branches , however , can be ephemeral , easily destroyed by wind , rain , or animal movements. Here we report a biologically feasible distributed algorithm , parameterized using field data , that can plausibly describe how turtle ants maintain the routing backbone and find alternative paths to circumvent broken links in the backbone. We validate the ability of this probabilistic algorithm to circumvent simulated breaks in synthetic and real-world networks , and we derive an analytic explanation for why certain features are crucial to improve the algorithm 's success. Our proposed algorithm uses fewer computational resources than common distributed graph search algorithms , and thus may be useful in other domains , such as for swarm computing or for coordinating molecular robots.